@using Comment_Post.ViewModels

@{
    ViewData["Title"] = "Register";
}

<h1>Register</h1>

@model RegisterViewModel

<h2>Register</h2>

<form asp-action="Register" method="post">
    @Html.AntiForgeryToken()

    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Password"></label>
        <input asp-for="Password" type="password" class="form-control" />
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ConfirmPassword"></label>
        <input asp-for="ConfirmPassword" type="password" class="form-control" />
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</form>


@section Scripts {
<!-- Include the signalR library -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.8/signalr.min.js"></script>

<!-- Your custom script follows -->
<script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/notificationHub").build();

    connection.start().then(function () {
        console.log("SignalR connected");
    }).catch(function (err) {
        console.error(err.toString());
    });

    connection.on("ReceiveNotification", function (message) {
        Swal.fire({
            title: 'Notification',
            text: message,
            icon: 'info',
            confirmButtonText: 'OK'
        }).then(function () {
            // Dispose the SignalR connection after the user closes the Swal dialog
            connection.stop();
        });
    });

    // Function to send a notification when the button is clicked
    function sendNotification() {
        var userId = "userIdToNotify";
        var message = "This is a notification message.";

        connection.invoke("SendNotificationToUser", userId, message).catch(function (err) {
            console.error(err.toString());
        });
    }
</script>}

